array_int   1000;
array_uint  10;
array_float 100;

function test {

	u[6] = 1;
	u[7] = 3;

	i[1] = i[2];
	i[2] = i[3] + 4;
	i[u[6] & u[7]] = i[3] ^ i[4 | i[5]];
	i[4] = ((i[3] & (500)) && (i[5] | (i[2] < 6)));
	i[3] = ~i[4];
	i[4] = i[5] << ( 3 > i[6] );
	i[6] = i[u[6] <<< u[7]];
	i[7] = (-i[8] < 0);
	i[8] = i[6] >>> i[7 * i[9] - 4];
	i[0] = i[1] != 0;
	i[1] = i[2] >= ( i[3] / 2 );

/*
	f[0] = sin(10);
	f[1] = cos(-11);
	f[2] = tan(12);
	f[3] = sinh(.4);
	f[4] = cosh(-.5);
	f[5] = tanh(.6);
	f[6] = asin(-.4);
	f[7] = acos(.5);
	f[8] = atan(2);
	f[9] = atan2(-2, 3);
	f[10] = exp(10);
	f[11] = log(20);
	f[12] = log10(21);
	f[13] = pow(2,4);
	f[14] = sqrt(5);
	f[15] = ceil(2.2);
	f[16] = floor(3.5);
	f[17] = fabs(-12.345);
	f[18] = fmod(21, 4);
	i[80] = abs(-12345);
	i[81] = gcd(1234, 22);

i[1]=i[(i[1]+1)-1]+1;
i[i[1]+0+0+0+0+0]=2;
i[2]++;
++i[2];
i[2]*=2;
f[3]=(f[i[1]]==sin(cos(2)));
i[3]=++i[2];
i[4]=i[2]++;
i[5]=(i[4]/0)+((((i[5]+1))));
f[1]=1.23;
f[1]<<=1; // illegal, will set to 0
i[6]=1;
i[6]<<=1;
i[6]*=(i[6]==2)?2:0; // conditional expression

f[10]=1-sin(i[9]+1.1);
f[10]=1  -sin   (i[9]+1.1);
f[12]=pow(2,1/3);
f[12]=sin(pow(f[12],3));
i[2]=3;
i[1] = ++i[2];
i[1] = i[2]++;
i[1] = (4*i[2]);
i[1] = 1*(1+(i[1]>>2));

i[1]=(i[1]<1)?2:22;

*/

	i[20]=4&5;
	i[21]=4|0x00001;
	i[22]=(2<5);
	i[23]=++i[1];
	f[20]=1.1;
	f[21]= f[1] + ( u[6] | 2 );

	i[8+i[1]]=(2+2) << u[7];

}

function main {
    verify();
}

function verify {
	test();

	u[0] = m[0] + i[0] + i[1] + i[2] + i[3] + i[4] + i[5] + i[6] + i[7] + i[8] + i[9];
	u[1] = m[1] + i[20] + i[21] + i[22] + i[23];
	u[2] = m[2] + f[0] + f[1] + f[2] + f[3] + f[4] + f[5] + f[6] + f[7] + f[8] + f[9];
	u[3] = m[3] + f[20] + f[21];

	verify_bty (m[0] <= 100);
	verify_pow (u[0],u[1],u[2],u[3]);
}
